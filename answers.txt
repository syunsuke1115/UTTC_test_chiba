Q１　checkout restore switchの使い分け
checkoutの機能が、ブランチの移動回りを扱うswitchと元に戻す系を扱うrestoreに分かれた。

Q2 margeとrebaseの使い分け
・使い分け
master(main)のコミットログを綺麗に残しておきたい場合は、rebaseを使う。
rebaseのデメリットとして、大きいブランチをマージし、コンフリクトが起きた時に、
一つずつ解消していかなくては行けないので大変。

・どちらを使うのがいいか個人的な見解
個人的には、masterのコミットログを遡る機会がそこまでないかなと思うので、
わかりやすいmargeでいいのかなと思う。（ここはプロジェクトにより異なると思うが）

Q３　merge戦略
・--ff
デフォルトの設定、マージコミットは作らず、参照元だけ変更
・--no-ff
意図的にfast-forwardを行わないコミットをすることが出来る。
これにより、mergeコミットが行われるようになり、ブランチの変更がわかりやすくなる。
また、マージコミットを取り消すことで、マージ作業を無かったことにしやすい。
・--ff-only
fast-forwardでマージできる状況ではfast-forwardでのmergeを、そうでなければfetchのみ行う。

・どれを使うのがいいか個人的な見解
--no-ffを使うのがいいのかなと思う。上に書いてあるような--no-ffのメリットは大きそう。